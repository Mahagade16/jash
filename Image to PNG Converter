<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Professional Image to PNG Converter | YourBlogName</title>
    <style>
        :root {
            --primary-color: #4a6bff;
            --secondary-color: #f8f9fa;
            --accent-color: #ff6b6b;
            --text-color: #333;
            --light-text: #777;
            --border-radius: 8px;
            --box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: #f5f7ff;
            color: var(--text-color);
            line-height: 1.6;
            padding: 20px;
        }
        
        .container {
            max-width: 900px;
            margin: 40px auto;
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, var(--primary-color), #6a5acd);
            color: white;
            padding: 30px;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2.2rem;
            margin-bottom: 10px;
        }
        
        .header p {
            opacity: 0.9;
            font-size: 1rem;
        }
        
        .converter-section {
            padding: 30px;
        }
        
        .upload-area {
            border: 2px dashed #ccc;
            border-radius: var(--border-radius);
            padding: 40px;
            text-align: center;
            margin-bottom: 30px;
            transition: all 0.3s ease;
            cursor: pointer;
            background-color: var(--secondary-color);
        }
        
        .upload-area:hover {
            border-color: var(--primary-color);
            background-color: rgba(74, 107, 255, 0.05);
        }
        
        .upload-area.active {
            border-color: var(--primary-color);
            background-color: rgba(74, 107, 255, 0.1);
        }
        
        .upload-icon {
            font-size: 48px;
            color: var(--primary-color);
            margin-bottom: 15px;
        }
        
        .upload-text {
            margin-bottom: 15px;
        }
        
        .upload-text h3 {
            margin-bottom: 5px;
            color: var(--text-color);
        }
        
        .upload-text p {
            color: var(--light-text);
            font-size: 0.9rem;
        }
        
        #fileInput {
            display: none;
        }
        
        .btn {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-size: 1rem;
            font-weight: 500;
            transition: all 0.3s ease;
            display: inline-block;
        }
        
        .btn:hover {
            background-color: #3a5bef;
            transform: translateY(-2px);
        }
        
        .btn:active {
            transform: translateY(0);
        }
        
        .btn-secondary {
            background-color: #6c757d;
        }
        
        .btn-secondary:hover {
            background-color: #5a6268;
        }
        
        .preview-section {
            display: none;
            margin-top: 30px;
        }
        
        .preview-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .image-preview {
            flex: 1;
            min-width: 250px;
        }
        
        .image-preview h3 {
            margin-bottom: 15px;
            font-size: 1.1rem;
        }
        
        .preview-image-container {
            border: 1px solid #eee;
            border-radius: var(--border-radius);
            padding: 10px;
            background-color: white;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            height: 300px;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }
        
        .preview-image {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }
        
        .image-info {
            margin-top: 15px;
            font-size: 0.9rem;
            color: var(--light-text);
        }
        
        .action-buttons {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }
        
        .settings {
            margin-top: 30px;
            padding: 20px;
            background-color: var(--secondary-color);
            border-radius: var(--border-radius);
        }
        
        .settings h3 {
            margin-bottom: 15px;
        }
        
        .setting-option {
            margin-bottom: 15px;
        }
        
        .setting-option label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
        }
        
        .setting-option select, .setting-option input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius);
        }
        
        .footer {
            text-align: center;
            margin-top: 40px;
            padding: 20px;
            color: var(--light-text);
            font-size: 0.9rem;
        }
        
        @media (max-width: 768px) {
            .container {
                margin: 20px auto;
            }
            
            .header {
                padding: 20px;
            }
            
            .converter-section {
                padding: 20px;
            }
            
            .upload-area {
                padding: 30px 20px;
            }
            
            .preview-container {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Image to PNG Converter</h1>
            <p>Convert any image format to high-quality PNG files instantly</p>
        </div>
        
        <div class="converter-section">
            <div class="upload-area" id="uploadArea">
                <div class="upload-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
                        <polyline points="17 8 12 3 7 8"></polyline>
                        <line x1="12" y1="3" x2="12" y2="15"></line>
                    </svg>
                </div>
                <div class="upload-text">
                    <h3>Drag & Drop Your Image Here</h3>
                    <p>or click to browse files (JPG, GIF, BMP, WEBP, etc.)</p>
                </div>
                <input type="file" id="fileInput" accept="image/*">
                <button class="btn" id="selectFileBtn">Select Image</button>
            </div>
            
            <div class="settings">
                <h3>Conversion Settings</h3>
                <div class="setting-option">
                    <label for="quality">PNG Quality (higher = larger file):</label>
                    <input type="range" id="quality" min="1" max="10" value="8">
                    <span id="qualityValue">8</span>/10
                </div>
                <div class="setting-option">
                    <label for="resize">Resize Image (optional):</label>
                    <select id="resize">
                        <option value="none">Keep original size</option>
                        <option value="800">800px width</option>
                        <option value="1200">1200px width</option>
                        <option value="1920">1920px width</option>
                        <option value="custom">Custom size</option>
                    </select>
                </div>
                <div class="setting-option" id="customSizeContainer" style="display: none;">
                    <label for="customSize">Custom Width (px):</label>
                    <input type="number" id="customSize" placeholder="Enter width in pixels">
                </div>
            </div>
            
            <div class="preview-section" id="previewSection">
                <div class="preview-container">
                    <div class="image-preview">
                        <h3>Original Image</h3>
                        <div class="preview-image-container">
                            <img id="originalPreview" class="preview-image" src="" alt="Original Image">
                        </div>
                        <div class="image-info" id="originalInfo"></div>
                    </div>
                    <div class="image-preview">
                        <h3>PNG Preview</h3>
                        <div class="preview-image-container">
                            <img id="pngPreview" class="preview-image" src="" alt="PNG Preview">
                        </div>
                        <div class="image-info" id="pngInfo"></div>
                    </div>
                </div>
                
                <div class="action-buttons">
                    <button class="btn" id="downloadBtn">Download PNG</button>
                    <button class="btn btn-secondary" id="convertAnotherBtn">Convert Another Image</button>
                </div>
            </div>
        </div>
    </div>
    
    <div class="footer">
        <p>Â© <span id="currentYear"></span> Image to PNG Converter Tool. All rights reserved.</p>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Set current year in footer
            document.getElementById('currentYear').textContent = new Date().getFullYear();
            
            // DOM elements
            const uploadArea = document.getElementById('uploadArea');
            const fileInput = document.getElementById('fileInput');
            const selectFileBtn = document.getElementById('selectFileBtn');
            const previewSection = document.getElementById('previewSection');
            const originalPreview = document.getElementById('originalPreview');
            const pngPreview = document.getElementById('pngPreview');
            const originalInfo = document.getElementById('originalInfo');
            const pngInfo = document.getElementById('pngInfo');
            const downloadBtn = document.getElementById('downloadBtn');
            const convertAnotherBtn = document.getElementById('convertAnotherBtn');
            const qualitySlider = document.getElementById('quality');
            const qualityValue = document.getElementById('qualityValue');
            const resizeSelect = document.getElementById('resize');
            const customSizeContainer = document.getElementById('customSizeContainer');
            const customSizeInput = document.getElementById('customSize');
            
            let currentFile = null;
            let pngBlob = null;
            
            // Event listeners
            selectFileBtn.addEventListener('click', () => fileInput.click());
            fileInput.addEventListener('change', handleFileSelect);
            uploadArea.addEventListener('dragover', handleDragOver);
            uploadArea.addEventListener('dragleave', handleDragLeave);
            uploadArea.addEventListener('drop', handleDrop);
            downloadBtn.addEventListener('click', downloadPNG);
            convertAnotherBtn.addEventListener('click', resetConverter);
            qualitySlider.addEventListener('input', updateQualityValue);
            resizeSelect.addEventListener('change', toggleCustomSize);
            
            // Update quality value display
            function updateQualityValue() {
                qualityValue.textContent = qualitySlider.value;
                if (currentFile) {
                    convertToPNG(currentFile);
                }
            }
            
            // Toggle custom size input
            function toggleCustomSize() {
                customSizeContainer.style.display = resizeSelect.value === 'custom' ? 'block' : 'none';
                if (currentFile) {
                    convertToPNG(currentFile);
                }
            }
            
            // Handle file selection
            function handleFileSelect(e) {
                const file = e.target.files[0] || (e.dataTransfer && e.dataTransfer.files[0]);
                if (file && file.type.match('image.*')) {
                    processFile(file);
                } else {
                    alert('Please select a valid image file.');
                }
            }
            
            // Handle drag over
            function handleDragOver(e) {
                e.preventDefault();
                e.stopPropagation();
                uploadArea.classList.add('active');
            }
            
            // Handle drag leave
            function handleDragLeave(e) {
                e.preventDefault();
                e.stopPropagation();
                uploadArea.classList.remove('active');
            }
            
            // Handle drop
            function handleDrop(e) {
                e.preventDefault();
                e.stopPropagation();
                uploadArea.classList.remove('active');
                handleFileSelect(e);
            }
            
            // Process selected file
            function processFile(file) {
                currentFile = file;
                
                // Display original image info
                const reader = new FileReader();
                reader.onload = function(e) {
                    originalPreview.src = e.target.result;
                    
                    // Get image dimensions
                    const img = new Image();
                    img.onload = function() {
                        originalInfo.innerHTML = `
                            <strong>Name:</strong> ${file.name}<br>
                            <strong>Type:</strong> ${file.type || 'Unknown'}<br>
                            <strong>Size:</strong> ${formatFileSize(file.size)}<br>
                            <strong>Dimensions:</strong> ${img.width} Ã ${img.height} px
                        `;
                        
                        // Convert to PNG
                        convertToPNG(file);
                        
                        // Show preview section
                        previewSection.style.display = 'block';
                    };
                    img.src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
            
            // Convert image to PNG
            function convertToPNG(file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const img = new Image();
                    img.onload = function() {
                        // Get target dimensions
                        let targetWidth = img.width;
                        let targetHeight = img.height;
                        
                        const resizeOption = resizeSelect.value;
                        if (resizeOption === 'custom' && customSizeInput.value) {
                            targetWidth = parseInt(customSizeInput.value);
                            targetHeight = Math.round((img.height / img.width) * targetWidth);
                        } else if (resizeOption !== 'none') {
                            targetWidth = parseInt(resizeOption);
                            targetHeight = Math.round((img.height / img.width) * targetWidth);
                        }
                        
                        // Create canvas
                        const canvas = document.createElement('canvas');
                        canvas.width = targetWidth;
                        canvas.height = targetHeight;
                        const ctx = canvas.getContext('2d');
                        
                        // Draw image to canvas (with resizing if needed)
                        ctx.drawImage(img, 0, 0, targetWidth, targetHeight);
                        
                        // Convert to PNG with quality setting
                        // Note: PNG is lossless, but we can control compression level
                        const quality = qualitySlider.value / 10;
                        canvas.toBlob(function(blob) {
                            pngBlob = blob;
                            const pngUrl = URL.createObjectURL(blob);
                            pngPreview.src = pngUrl;
                            
                            // Display PNG info
                            pngInfo.innerHTML = `
                                <strong>Format:</strong> PNG<br>
                                <strong>Size:</strong> ${formatFileSize(blob.size)}<br>
                                <strong>Dimensions:</strong> ${targetWidth} Ã ${targetHeight} px<br>
                                <strong>Quality:</strong> ${quality * 100}%
                            `;
                        }, 'image/png', quality);
                    };
                    img.src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
            
            // Download PNG
            function downloadPNG() {
                if (!pngBlob) return;
                
                const url = URL.createObjectURL(pngBlob);
                const a = document.createElement('a');
                a.href = url;
                a.download = currentFile.name.replace(/\.[^/.]+$/, '') + '.png';
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                URL.revokeObjectURL(url);
            }
            
            // Reset converter
            function resetConverter() {
                currentFile = null;
                pngBlob = null;
                fileInput.value = '';
                originalPreview.src = '';
                pngPreview.src = '';
                originalInfo.textContent = '';
                pngInfo.textContent = '';
                previewSection.style.display = 'none';
            }
            
            // Format file size
            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                const k = 1024;
                const sizes = ['Bytes', 'KB', 'MB', 'GB'];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }
        });
    </script>
</body>
</html>
